# Copyright 2023 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

steps:
  - id: Install dependencies
    name: python:3.11
    dir: retrieval_service
    entrypoint: pip
    args:
      [
        "install",
        "-r",
        "requirements.txt",
        "-r",
        "requirements-test.txt",
        "--user",
      ]

  - id: Create database
    name: postgres
    entrypoint: /bin/bash
    secretEnv:
      - PGUSER # Use built-in env vars for database connection
      - PGPASSWORD
    args:
      - "-c"
      - |
        psql -h ${_DATABASE_HOST} -c "CREATE DATABASE ${_DATABASE_NAME};" || echo "Database '${_DATABASE_NAME}' already exists."
        psql -h ${_DATABASE_HOST} -d ${_DATABASE_NAME} -c 'CREATE EXTENSION vector;' || echo "Extension 'vector' already exists."

  - id: Update config
    name: python:3.11
    dir: retrieval_service
    secretEnv:
      - PGUSER
      - PGPASSWORD
    entrypoint: /bin/bash
    args:
      - "-c"
      - |
        # Create config
        cp example-config.yml config.yml
        sed -i "s/127.0.0.1/${_DATABASE_HOST}/g" config.yml
        sed -i "s/my_database/${_DATABASE_NAME}/g" config.yml
        sed -i "s/my-user/$$PGUSER/g" config.yml
        sed -i "s/my-password/$$PGPASSWORD/g" config.yml

  - id: Run Alloy DB integration tests
    name: python:3.11
    dir: retrieval_service
    env: # Set env var expected by tests
      - "DB_NAME=${_DATABASE_NAME}"
      - "DB_HOST=${_DATABASE_HOST}"
    secretEnv:
      - PGUSER
      - PGPASSWORD
    entrypoint: /bin/bash
    args:
      - "-c"
      - |
        # Set env var expected by tests
        export DB_USER=$$PGUSER
        export DB_PASS=$$PGPASSWORD
        python -m pytest datastore/providers/postgres_test.py

  - id: Clean database
    name: postgres
    entrypoint: /bin/bash
    secretEnv:
      - PGUSER
      - PGPASSWORD
    args:
      - "-c"
      - |
        psql -h ${_DATABASE_HOST} -c "DROP DATABASE IF EXISTS ${_DATABASE_NAME};"

substitutions:
  _DATABASE_NAME: test_${SHORT_SHA}
  _DATABASE_USER: postgres
  _DATABASE_HOST: 127.0.0.1

availableSecrets:
  secretManager:
    - versionName: projects/$PROJECT_ID/secrets/alloy_db_pass/versions/latest
      env: PGPASSWORD
    - versionName: projects/$PROJECT_ID/secrets/alloy_db_user/versions/latest
      env: PGUSER
options:
  substitutionOption: 'ALLOW_LOOSE'
  dynamic_substitutions: true
  pool:
    name: projects/$PROJECT_ID/locations/us-central1/workerPools/alloy-private-pool # Necessary for VPC network connection
